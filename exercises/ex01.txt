

PUT olympic-events-fixed
{
  "settings": {
    "number_of_shards": 1,
    "number_of_replicas": 0
  },
  "mappings": {
    "properties": {
      "athleteId": {
        "type": "integer"
      },
      "age": {
        "type": "short"
      },
      "height": {
        "type": "short"
      },
      "weight": {
        "type": "short"
      },
      "athleteName": {
        "type": "text",
        "fields": {
          "keyword": {
            "type": "keyword"
          }
        }
      },
      "gender": {
        "type": "keyword"
      },
      "team": {
        "type": "keyword"
      },
      "noc": {
        "type": "keyword"
      },
      "year": {
        "type": "short"
      },
      "season": {
        "type": "keyword"
      },
      "city": {
        "type": "text",
        "fields": {
          "keyword": {
            "type": "keyword"
          }
        }
      },
      "sport": {
        "type": "keyword"
      },
      "event": {
        "type": "text",
        "fields": {
          "keyword": {
            "type": "keyword"
          }
        }
      },
      "medal": {
        "type": "keyword"
      }
    }
  }
}





POST _ingest/pipeline/split_games/_simulate
{
  "docs": [
    {
      "_source": {
        "Games": "2014 Winter"
      }
    }
  ]
}



POST _ingest/pipeline/split_games/_simulate
{
  "docs": [
    {
      "_source": {
        "Games": "1998 Summer"
      }
    }
  ]
}

PUT _ingest/pipeline/split_games
{
  "processors": [
    {
      "split": {
        "field": "Games",
        "separator": " "
      }
    },
    {
      "script": {
        "source": """
ctx.year = ctx.Games[0];
ctx.season = ctx.Games[1];
"""
      }
    }
  ]
}




POST olympic-events/_search

POST olympic-events/_search
{
  "_source": ["Games"]
}



POST olympic-events/_delete_by_query
{
  "query": {
    "bool": {
      "should": [
        {
          "term": {
            "Age": {
              "value": "NA"
            }
          }
        },
        {
          "term": {
            "Age": {
              "value": "NA"
            }
          }
        },
        {
          "term": {
            "Age": {
              "value": "NA"
            }
          }
        }
      ],
      "minimum_should_match": 1
    }
  }
}


GET olympic-events/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "term": {
            "Age": {
              "value": "NA"
            }
          }
        },
        {
          "term": {
            "Age": {
              "value": "NA"
            }
          }
        },
        {
          "term": {
            "Age": {
              "value": "NA"
            }
          }
        }
      ],
      "minimum_should_match": 1
    }
  }
}




GET _cat/indices/olympic-events*/?v&h=index,health,docs.count,pri.store.size

POST _reindex
{
  "source": {
    "index": "olympic-events"
  },
  "dest": {
    "index": "olympic-events-backup"  
  }
}


GET olympic-events/_search
{
  "size": 0,
  "aggs": {
    "NAME": {
      "terms": {
        "field": "Age",
        "size": 100
      }
    }
  }
}


GET olympic-events/_mapping


GET _cat/indices/olympic-events/?v&h=index,health,docs.count,pri.store.size



GET _cluster/allocation/explain


PUT olympic-events/_settings
{
  "number_of_replicas": 0
}
